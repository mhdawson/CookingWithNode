<!--
Copyright 2016 the project authors as listed in the AUTHORS file.
All rights reserved. Use of this source code is governed by the
license that can be found in the LICENSE file.
-->

<html>
  <head>
    <title><DASHBOARD_TITLE></title>

    <script src="/socket.io/socket.io.js"></script>

    <script>
      var urlType = '<URL_TYPE>://';
      socket = new io.connect(urlType + window.location.host);

      var meatSelections = "";

      var tasteSelections = new Object();

      var muteTimers = new Object();
      var flashMute = function(probeId)  {
        stopFlashMute(probeId);
        muteTimers[probeId] = setInterval(function() {
          var probe = document.getElementById(probeId);
          if (probe.children[7].className === 'mute') {
            probe.children[7].className = 'mute flash';
          } else {
            probe.children[7].className = 'mute';
          }
        }, 1000);
      }

      var stopFlashMute = function(probeId) {
        if (muteTimers[probeId] !== undefined) {
          clearInterval(muteTimers[probeId]);
          muteTimers[probeId] = undefined;
        }
        var probe = document.getElementById(probeId);
        probe.children[7].className = 'mute';
      }

      var soundElems = new Object();
      var playSound = function(probeId, file, repeat) {
        stopSound(probeId);
        soundElems[probeId] = new Audio(urlType + window.location.host + '/' + file);
        if (repeat) {
          soundElems[probeId].addEventListener('ended', function() {
            this.currentTime = 0;
            this.play();
          }, false);
        }
        soundElems[probeId].play();
      }

      var stopSound = function(probeId) {
        if (soundElems[probeId] !== undefined) {
          soundElems[probeId].pause();
          soundElems[probeId].currentTime = 0;
        }
      }

      socket.on('data', function(data) {
        if (data.type === 'temp') {

          var probe = document.getElementById(data.id);
          if (probe === null) {
            probe = document.createElement('probe');
            probe.id = data.id;
            var tempElement = document.createElement('temp');
            probe.appendChild(tempElement);

            var targetElement = document.createElement('target');
            probe.appendChild(targetElement);

            var deviceElement = document.createElement('device');
            probe.appendChild(deviceElement);
            probe.children[2].innerHTML = 'probe[' + data.id + ']';

            var meatElement = document.createElement('select');
            meatElement.className = 'meat';
            meatElement.innerHTML = meatSelections;
            meatElement.value = data.meat;
            meatElement.onchange = function () {
              socket.emit('new-meat', probe.id, meatElement.value);
            }
            probe.appendChild(meatElement);

            var tasteElement = document.createElement('select');
            tasteElement.className = 'taste';
            tasteElement.innerHTML = tasteSelections[data.meat];
            tasteElement.value = data.taste;
            tasteElement.onchange = function () {
              socket.emit('new-taste', probe.id, tasteElement.value);
            }
            probe.appendChild(tasteElement);

            var scaleF = document.createElement('scale');
            scaleF.id = 'scaleF';
            scaleF.innerHTML = 'F';
            if (!data.scaleC) {
              scaleF.className = 'selected scaleF';
            } else {
              scaleF.className = 'scaleF';
            }
            scaleF.onclick = function() {
              socket.emit('scaleC', probe.id, false);
            }
            probe.appendChild(scaleF);

            var scaleC= document.createElement('scale');
            scaleC.id = 'scaleC';
            scaleC.innerHTML = 'C';
            if (scaleC) {
              scaleC.className = 'selected scaleC';
            } else {
              scaleC.className = 'scaleC';
            }
            scaleC.onclick = function() {
              socket.emit('scaleC', probe.id, true);
            }
            probe.appendChild(scaleC);

            var muteElement= document.createElement('mute');
            muteElement.innerHTML = 'mute';
            muteElement.onclick = function() {
              stopSound(probe.id);
              stopFlashMute(probe.id);
            }
            probe.appendChild(muteElement);

            document.getElementById('temps').appendChild(probe);
          }
          probe.children[0].innerHTML = data.temp;
          probe.children[1].innerHTML = 'Target:' + data.target;
          probe.children[4].innerHTML = tasteSelections[data.meat];
          probe.children[4].value = data.taste;
          if ((data.scaleC) && (probe.children[5].className != 'scaleF')) {
            probe.children[5].className = 'scaleF';
            probe.children[6].className = 'selected scaleC';
          } else if ((!data.scaleC) && (probe.children[6].className != 'scaleC')) {
            probe.children[5].className = 'selected scaleF';
            probe.children[6].className = 'scaleC';
          }

          if (data.status === 'warn' ) {
            if (probe.className !== 'warn probe') {
              probe.className = 'warn probe';
              playSound(data.id, 'warnSound', true); 
              flashMute(data.id);
            }
          } else if (data.status === 'alert') {
            if (probe.className !== 'alert probe') {
              probe.className = 'alert probe';
              playSound(data.id, 'targetSound', true);
              flashMute(data.id);
            }
          } else {
            probe.className = 'probe';
          }
        }
      });

      socket.on('cleanup', function(data) {
        var probe = document.getElementById(data.id);
        if (probe !== null) {
          probe.parentNode.removeChild(probe);
        }
      });

      socket.on('cleanup-all', function() {
        var temps = document.getElementById('temps');
        temps.innerHTML = "";
      });

      socket.on('tastes', function(data) {
        meatSelections = "";
        tasteSelections = new Object();
        targetTemps = data;
        for (let i = 0; i < targetTemps.length; i++ ) {
          meatSelections = meatSelections + '<option id="' + targetTemps[i].name + '">'
                                          + targetTemps[i].name
                                          + '</option>';
          var targTemps = targetTemps[i].temps;
          var tasteSelection = "";
          tasteSelections[targetTemps[i].name] = "";
          for (let j = 0; j < targTemps.length; j++ ) {
            tasteSelection = tasteSelection + '<option id="' + Object.keys(targTemps[j])[0] + '">'
                                            + Object.keys(targTemps[j])[0]
                                            + '</option>';
          }
          tasteSelections[targetTemps[i].name] = tasteSelection;
        }
      });


    </script>

    <style>
      main {
        width: 100%;
        height: 100%;
        top: -100%;
        left: 0;
        margin: 0;
        padding: 0;
      }

      probe {
        width: 100%; 
        height: 100px;
        background-color: ForestGreen;
        border-radius: 25px;
        position: relative;
        display: block;
        margin: 2px;
        border: 2px solid black;
      }

      .warn {
        background-color: yellow !important;
      }

      .alert {
        background-color: red !important;
      }

      temp {
        width: 150px; 
        height: 50px; 
        font-size: 40px;
        position: absolute;
        padding: 5px
      }

      target {
        width: 150px; 
        height: 22px; 
        font-size: 20px;
        position: absolute;
        left: 5px;
	top: 51px; 
      }

      device {
        font-size: 12px;
        position: absolute;
        left: 10px;
	top: 74px; 
      }

      .meat {
        width: 140px 
        height: 15px 
        font-size: 15px;
        position: absolute;
        left: 150px;
	top: 2px; 
      }

      .taste {
        width: 140px 
        height: 15px 
        font-size: 15px;
        position: absolute;
        left: 150px;
	top: 26px; 
      }

      .scaleF {
        border-radius: 3px;
        font-size: 10px;
        position: absolute;
        left: 135px;
	top: 27px; 
        background-color: grey;
        padding: 2px;
      }

      .scaleC {
        border-radius: 3px;
        font-size: 10px;
        position: absolute;
        left: 120px;
	top: 27px; 
        background-color: grey;
        padding: 2px;
      }

      .selected {
        background-color: lightgrey !important;
      }

      mute {
        border-radius: 3px;
        height: 20px 
        font-size: 15px;
        position: absolute;
        left: 91px;
	top: 75px; 
        background-color: lightgrey;
      }

      .flash {
        background-color: transparent !important;
      }

    </style>
  </head>

  <body padding="0", margin="0", width="100%", height = "100%">
    <main id="temps" ></main>
    <div id=sound></div>
  </body>
</html>
